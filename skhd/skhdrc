# ################################################################ #
# THE FOLLOWING IS AN EXPLANATION OF THE GRAMMAR THAT SKHD PARSES. #
# FOR SIMPLE EXAMPLE MAPPINGS LOOK FURTHER DOWN THIS FILE..        #
# ################################################################ #

# A list of all built-in modifier and literal keywords can
# be found at https://github.com/koekeishiya/skhd/issues/1
#
# A hotkey is written according to the following rules:
#
#   hotkey       = <mode> '<' <action> | <action>
#
#   mode         = 'name of mode' | <mode> ',' <mode>
#
#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#   keysym       = <mod> '-' <key> | <key>
#
#   mod          = 'modifier keyword' | <mod> '+' <mod>
#
#   key          = <literal> | <keycode>
#
#   literal      = 'single letter or built-in keyword'
#
#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#   proc_map_lst = * <proc_map>
#
#   proc_map     = <string> ':' <command> | <string>     '~' |
#                  '*'      ':' <command> | '*'          '~'
#
#   string       = '"' 'sequence of characters' '"'
#
#   command      = command is executed through '$SHELL -c' and
#                  follows valid shell syntax. if the $SHELL environment
#                  variable is not set, it will default to '/bin/bash'.
#                  when bash is used, the ';' delimeter can be specified
#                  to chain commands.
#
#                  to allow a command to extend into multiple lines,
#                  prepend '\' at the end of the previous line.
#
#                  an EOL character signifies the end of the bind.
#
#   ->           = keypress is not consumed by skhd
#
#   *            = matches every application not specified in <proc_map_lst>
#
#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
# A mode is declared according to the following rules:
#
#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#               '::' <name> '@'               | '::' <name>
#
#   name      = desired name for this mode,
#
#   @         = capture keypresses regardless of being bound to an action
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.

# ############################################################### #
# THE FOLLOWING SECTION CONTAIN SIMPLE MAPPINGS DEMONSTRATING HOW #
# TO INTERACT WITH THE YABAI WM. THESE ARE SUPPOSED TO BE USED AS #
# A REFERENCE ONLY, WHEN MAKING YOUR OWN CONFIGURATION..          #
# ############################################################### #

# focus window
# alt - h : yabai -m window --focus west
cmd + alt - 0x1E : yabai -m window --focus east
cmd + alt - 0x21 : yabai -m window --focus west

# swap managed window
# shift + alt - h : yabai -m window --swap north

# move managed window
# shift + cmd - h : yabai -m window --warp east

# balance size of windows
# shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
# shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"

# fast focus desktop
# cmd + alt - x : yabai -m space --focus recent
# cmd - 0x0A ; ywm
# shift + cmd - 0x0A ; default
# :: ywm 1 : yabai -m space --focus 1
# cmd + ยง - 1 : yabai -m space --focus 1
# ยง + cmd - 2 : yabai -m space --focus 2
default < cmd - 1 : yabai -m space --focus one
default < cmd - 2 : yabai -m space --focus two
default < cmd - 3 : yabai -m space --focus three
default < cmd - 4 : yabai -m space --focus four
default < cmd - q : yabai -m space --focus five
default < cmd - w : yabai -m space --focus six

:: default : true
:: plain : true

ctrl + cmd + shift + alt - p ; plain
plain < ctrl + cmd + shift + alt - d ; default

0x73 : skhd -k "cmd - left"
0x77 : skhd -k "cmd - right"

shift - 0x72 : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - v" ; skhd -k "ctrl + cmd + shift + alt - d"
shift - 0x75 : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - x" ; skhd -k "ctrl + cmd + shift + alt - d"

ctrl - c [
  * : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - c" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" ~
]
ctrl - v : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - v" ; skhd -k "ctrl + cmd + shift + alt - d"
ctrl - x : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - x" ; skhd -k "ctrl + cmd + shift + alt - d"
ctrl - a [
  * : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - a" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" ~
]

ctrl - 1 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 1" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 1" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 1" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 2 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 2" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 2" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 2" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 3 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 3" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 3" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 3" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 4 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 4" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 4" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 4" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 5 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 5" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 5" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 5" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 6 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 6" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 6" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 6" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 7 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 7" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 7" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 7" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 8 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 8" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 8" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 8" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - 9 [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 9" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 9" ; skhd -k "ctrl + cmd + shift + alt - d"
  "iterm2" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - 9" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - w [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - w" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - w" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - t [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - t" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - t" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - f [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - f" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - f" ; skhd -k "ctrl + cmd + shift + alt - d"
  "code" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - f" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl + shift - t [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd + shift - t" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd + shift - t" ; skhd -k "ctrl + cmd + shift + alt - d"
]


ctrl + shift - r [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd + shift - r" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd + shift - r" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - r [
  "firefox" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - r" ; skhd -k "ctrl + cmd + shift + alt - d"
  "google chrome" : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - r" ; skhd -k "ctrl + cmd + shift + alt - d"
]

ctrl - left : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "alt - left" ; skhd -k "ctrl + cmd + shift + alt - d"
ctrl - right : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "alt - right" ; skhd -k "ctrl + cmd + shift + alt - d"
ctrl - z : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - z" ; skhd -k "ctrl + cmd + shift + alt - d"
ctrl - backspace : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "alt - backspace" ; skhd -k "ctrl + cmd + shift + alt - d"
ctrl - s : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd - s" ; skhd -k "ctrl + cmd + shift + alt - d"
ctrl + shift - f : skhd -k "ctrl + cmd + shift + alt - p" ; skhd -k "cmd + shift - f" ; skhd -k "ctrl + cmd + shift + alt - d"


# send window to desktop and follow focus
# shift + cmd - z : yabai -m window --space next; yabai -m space --focus next
ctrl + shift + cmd - 1 : yabai -m window --space  one; yabai -m space --focus one
ctrl + shift + cmd - 2 : yabai -m window --space  two; yabai -m space --focus two
ctrl + shift + cmd - 3 : yabai -m window --space  three; yabai -m space --focus three
ctrl + shift + cmd - 4 : yabai -m window --space  four; yabai -m space --focus four
ctrl + shift + cmd - 5 : yabai -m window --space  five; yabai -m space --focus five
ctrl + shift + cmd - 6 : yabai -m window --space  six; yabai -m space --focus six

# focus monitor
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - 3  : yabai -m display --focus 3
cmd - 0x21  : yabai -m display --focus 1
cmd - 0x1E  : yabai -m display --focus 2

# send window to monitor and follow focus
# ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1
shift + cmd - 0x21 : yabai -m window --display 1; yabai -m display --focus 1
shift + cmd - 0x1E : yabai -m window --display 2; yabai -m display --focus 2

# move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20

# increase window size
# shift + alt - a : yabai -m window --resize left:-20:0
# shift + alt - w : yabai -m window --resize top:0:-20

# decrease window size
# shift + cmd - s : yabai -m window --resize bottom:0:-20
# shift + cmd - w : yabai -m window --resize top:0:20

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
# alt - d : yabai -m window --toggle zoom-parent
# alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window split type
# alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
# alt - t : yabai -m window --toggle float;\
#           yabai -m window --grid 4:4:1:1:2:2

# toggle sticky(+float), topmost, border and picture-in-picture
# alt - p : yabai -m window --toggle sticky;\
#           yabai -m window --toggle topmost;\
#           yabai -m window --toggle border;\
#           yabai -m window --toggle pip


ctrl + cmd - 0x24 : iterm.sh
